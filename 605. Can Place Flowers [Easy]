TOP 75 LEETCODE

### MY CODE 
class Solution {
    public boolean canPlaceFlowers(int[] flowerbed, int n) {
        int count =0;
        for (int i=0; i<flowerbed.length;i++){
            if(flowerbed[i]==0){
                int prev=(i==0 || flowerbed[i-1]==0)?0:1;
                int next=(flowerbed.length-1 || flowerbed[i+1]==0)?0:1;

                if(prev==0 && next==0){
                    flowerbed[i]=1;
                    count++;
                }
            }
        }
        return count>=n;
    }
}

### OPTIMISED APPROACH
class Solution {
    public boolean canPlaceFlowers(int[] flowerbed, int n) {
        if (n == 0) {
            return true;
        }
        int count = 0;
        for (int i = 0; i < flowerbed.length; i+=2) {
            if (flowerbed[i] == 0) {
                if ((i < flowerbed.length - 1 && flowerbed[i + 1] == 0) || i == flowerbed.length - 1) {
                    if (++count >= n) {
                        return true;
                    }
                } else {
                    i++;
                }
            }
        }
        return false;
    }
}
